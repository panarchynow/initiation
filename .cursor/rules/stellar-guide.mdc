---
description: 
globs: lib/stellar.ts
alwaysApply: false
---
# Stellar Module Guide

## Overview
This module provides integration with the Stellar blockchain API for creating and verifying transactions. The module is used to create managed data (ManageData operations) in Stellar transactions.

## Key Files
- [lib/stellar.ts](mdc:lib/stellar.ts) - Core module for working with Stellar
- [lib/stellar.spec.ts](mdc:lib/stellar.spec.ts) - Tests for the Stellar module

## Testing Practices
Tests use the Bun Test Runner (`bun:test`). Key features:

- `mock()` functions are used to mock external dependencies
- Tests are organized using `describe` and `test`
- For verification, functions like `expect().toHaveBeenCalled()`, `expect().toBe()`, etc. are used
- To run tests, use the command `bun test`

## Stellar API Integration
The module provides the following core functions:

1. `createStellarServer` - creates a Stellar server instance
2. `buildTransaction` - creates a transaction with ManageData operations
3. `generateStellarTransaction` - generates an XDR transaction string
4. `verifyTransactionXDR` - verifies the validity of an XDR string

## Form Schema
For working with transactions, a form schema from [lib/validation.ts](mdc:lib/validation.ts) is used, which defines the data structure for the transaction.
